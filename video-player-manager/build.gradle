apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "0.3"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'junit:junit:4.12'
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = 0.3
group = "com.nzsg.github"

bintray {
    user = 'nzsg'
    key = ''
    configurations = ['archives']
    pkg {
        repo = 'nzsg-maven'
        name = 'video-player-manager'
        userOrg = 'nzsg'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ZysGit/VideoPlayerManager.git'
        publish = true // 是否是公开项目。
        version {
            name = '0.3'
            desc = 'sss'
            released = new Date()
            vcsTag = 'v0.3'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'VideoPlayerManager'
                description ''
                url 'https://github.com/ZysGit/VideoPlayerManager'
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
